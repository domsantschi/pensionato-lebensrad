[{"name":"app.R","content":"library(shiny)\r\nlibrary(bslib)\r\nlibrary(ggplot2)\r\nlibrary(dplyr)\r\nlibrary(tidyr)\r\nlibrary(scales)\r\nlibrary(shinyjs)\r\n\r\n# Define life areas\r\nlife_areas <- c(\r\n  \"Gesundheit\" = \"gesundheit\",\r\n  \"Finanzen\" = \"finanzen\",\r\n  \"Soziale Beziehungen\" = \"sozial\",\r\n  \"Familie\" = \"familie\",\r\n  \"Persönliche Entwicklung\" = \"entwicklung\",\r\n  \"Freizeit & Hobbys\" = \"freizeit\",\r\n  \"Wohnsituation\" = \"wohnen\",\r\n  \"Beruf/Karriere\" = \"beruf\"\r\n)\r\n\r\nui <- page_fluid(\r\n  useShinyjs(),\r\n  theme = bs_theme(version = 5, bootswatch = \"litera\"),\r\n  \r\n  # Header\r\n  card(\r\n    card_header(\r\n      h1(\"Selbstcheck Lebensrad\", class = \"text-center\")\r\n    ),\r\n    card_body(\r\n      p(\"Dieses interaktive Tool hilft dir dabei, deine aktuelle Lebenssituation zu erfassen und Prioritäten für deine Pensionierungsplanung zu setzen. Das Lebensrad ist ein bewährtes Modell, um verschiedene Lebensbereiche zu visualisieren und zu bewerten.\"),\r\n      \r\n      p(\"So funktioniert es:\"),\r\n      tags$ul(\r\n        tags$li(strong(\"Bewertung deiner Lebensbereiche:\"), \" Beurteile verschiedene Aspekte deines Lebens auf einer Skala von 1 bis 10.\"),\r\n        tags$li(strong(\"Visualisierung:\"), \" Deine Bewertungen werden in einem Lebensrad dargestellt, das dir einen klaren Überblick über deine Stärken und Verbesserungsmöglichkeiten bietet.\"),\r\n        tags$li(strong(\"Prioritäten setzen:\"), \" Basierend auf deiner Bewertung kannst du gezielt Bereiche identifizieren, die für deine Pensionierungsplanung besonders wichtig sind.\")\r\n      )\r\n    )\r\n  ),\r\n  \r\n  # Main content\r\n  layout_columns(\r\n    col_widths = c(5, 7),\r\n    \r\n    # Left column with inputs\r\n    card(\r\n      card_header(\r\n        h3(\"Bewerte deine Lebensbereiche\")\r\n      ),\r\n      card_body(\r\n        p(\"Wie zufrieden bist du aktuell mit den folgenden Lebensbereichen?\"),\r\n        p(\"Bewerte jeden Bereich auf einer Skala von 1 (sehr unzufrieden) bis 10 (sehr zufrieden).\"),\r\n        \r\n        lapply(names(life_areas), function(area) {\r\n          div(\r\n            class = \"mb-3\",\r\n            h5(area),\r\n            sliderInput(\r\n              inputId = life_areas[area],\r\n              label = NULL,\r\n              min = 1,\r\n              max = 10,\r\n              value = 5,\r\n              step = 1,\r\n              width = \"100%\"\r\n            )\r\n          )\r\n        }),\r\n        \r\n        actionButton(\r\n          \"reset_btn\",\r\n          \"Zurücksetzen\",\r\n          class = \"btn-secondary\",\r\n          width = \"100%\"\r\n        )\r\n      )\r\n    ),\r\n    \r\n    # Right column with visualization\r\n    card(\r\n      card_header(\r\n        h3(\"Dein persönliches Lebensrad\")\r\n      ),\r\n      card_body(\r\n        plotOutput(\"wheel_chart\", height = \"450px\"),\r\n        hr(),\r\n        h4(\"Deine Ergebnisse\"),\r\n        p(\"Hier siehst du, welche Bereiche deines Lebens besonders stark oder verbesserungswürdig sind:\"),\r\n        tableOutput(\"results_table\"),\r\n        # downloadButton(\"download_results\", \"Ergebnisse herunterladen\", class = \"btn-primary mt-3\")\r\n      )\r\n    )\r\n  ),\r\n  \r\n  # Interpretation\r\n  card(\r\n    card_header(\r\n      h3(\"Interpretation deiner Ergebnisse\")\r\n    ),\r\n    card_body(\r\n      p(\"Das Lebensrad zeigt dir auf einen Blick, wie ausgewogen dein Leben ist:\"),\r\n      tags$ul(\r\n        tags$li(strong(\"Bereiche mit hohen Werten (8-10):\"), \" Hier bist du bereits gut aufgestellt. Überlege, wie du diese Stärken in deine Pensionierungsplanung einbringen kannst.\"),\r\n        tags$li(strong(\"Bereiche mit mittleren Werten (5-7):\"), \" Diese Aspekte bieten Potenzial zur Verbesserung. Identifiziere konkrete Schritte, um hier weitere Fortschritte zu erzielen.\"),\r\n        tags$li(strong(\"Bereiche mit niedrigen Werten (1-4):\"), \" Diese Aspekte könnten besondere Aufmerksamkeit benötigen. Überlege, welche Maßnahmen du ergreifen kannst, um hier Verbesserungen zu erzielen.\")\r\n      ),\r\n      p(\"Nutze diese Erkenntnisse, um deine Pensionierungsplanung gezielt anzugehen und ein ausgewogenes, erfülltes Leben im Ruhestand vorzubereiten.\")\r\n    )\r\n  )\r\n)\r\n\r\nserver <- function(input, output, session) {\r\n  # Create reactive values to store all ratings\r\n  ratings <- reactive({\r\n    sapply(life_areas, function(id) input[[id]])\r\n  })\r\n  \r\n  # Reset button functionality\r\n  observeEvent(input$reset_btn, {\r\n    for (id in life_areas) {\r\n      updateSliderInput(session, id, value = 5)\r\n    }\r\n  })\r\n  \r\n  # Generate the wheel chart\r\n  output$wheel_chart <- renderPlot({\r\n    # Get current ratings\r\n    values <- ratings()\r\n    \r\n    # Prepare data for plotting\r\n    plot_data <- data.frame(\r\n      category = names(life_areas),\r\n      value = values,\r\n      stringsAsFactors = FALSE\r\n    )\r\n    \r\n    # Convert to polar coordinates for radar chart\r\n    angles <- seq(0, 2*pi, length.out = nrow(plot_data) + 1)\r\n    plot_data$angle <- angles[1:nrow(plot_data)]\r\n    \r\n    # Calculate x and y coordinates for polygon\r\n    plot_data <- plot_data %>%\r\n      mutate(\r\n        x = value/10 * sin(angle),\r\n        y = value/10 * cos(angle)\r\n      )\r\n    \r\n    # Duplicate first row to close the polygon\r\n    plot_data_closed <- rbind(plot_data, plot_data[1, ])\r\n    \r\n    # Calculate coordinates for the full circle (10 rating)\r\n    circle_data <- data.frame(\r\n      angle = seq(0, 2*pi, length.out = 100),\r\n      x = sin(seq(0, 2*pi, length.out = 100)),\r\n      y = cos(seq(0, 2*pi, length.out = 100))\r\n    )\r\n    \r\n    # Create guides for ratings 2, 4, 6, 8\r\n    guides_data <- data.frame()\r\n    for (i in c(0.2, 0.4, 0.6, 0.8)) {\r\n      temp_df <- data.frame(\r\n        angle = seq(0, 2*pi, length.out = 100),\r\n        x = i * sin(seq(0, 2*pi, length.out = 100)),\r\n        y = i * cos(seq(0, 2*pi, length.out = 100)),\r\n        level = i * 10\r\n      )\r\n      guides_data <- rbind(guides_data, temp_df)\r\n    }\r\n    \r\n    # Create the radar chart\r\n    ggplot() +\r\n      # Add guides/circles\r\n      geom_path(data = guides_data, aes(x = x, y = y, group = level), \r\n                color = \"gray80\", size = 0.5, linetype = \"dashed\") +\r\n      # Add outer circle (10 rating)\r\n      geom_path(data = circle_data, aes(x = x, y = y), \r\n                color = \"gray50\", size = 0.7) +\r\n      # Add filled polygon for ratings\r\n      geom_polygon(data = plot_data, aes(x = x, y = y), \r\n                   fill = \"royalblue\", alpha = 0.4) +\r\n      # Add outline for the ratings polygon\r\n      geom_path(data = plot_data_closed, aes(x = x, y = y), \r\n                color = \"royalblue\", size = 1) +\r\n      # Add points for each category\r\n      geom_point(data = plot_data, aes(x = x, y = y), \r\n                 color = \"royalblue\", size = 3) +\r\n      # Add category labels\r\n      geom_text(data = plot_data, \r\n                aes(x = 1.1 * sin(angle), y = 1.1 * cos(angle), label = category),\r\n                fontface = \"bold\", size = 4) +\r\n      # Add value labels\r\n      geom_text(data = plot_data, \r\n                aes(x = (value/10 + 0.05) * sin(angle), \r\n                    y = (value/10 + 0.05) * cos(angle), \r\n                    label = value),\r\n                color = \"royalblue\", fontface = \"bold\", size = 3.5) +\r\n      # Add guide labels (2, 4, 6, 8)\r\n      geom_text(data = data.frame(x = c(0.2, 0.4, 0.6, 0.8), y = 0, label = c(2, 4, 6, 8)),\r\n                aes(x = x, y = y, label = label), color = \"gray50\", size = 3) +\r\n      # Set theme and coordinates\r\n      coord_fixed() +\r\n      theme_void() +\r\n      theme(\r\n        plot.background = element_rect(fill = \"white\", color = NA),\r\n        plot.margin = margin(20, 20, 20, 20)\r\n      )\r\n  })\r\n  \r\n  # Generate results table\r\n  output$results_table <- renderTable({\r\n    current_ratings <- ratings()\r\n    data.frame(\r\n      Lebensbereich = names(life_areas),\r\n      Bewertung = current_ratings,\r\n      Status = case_when(\r\n        current_ratings >= 8 ~ \"Stark\",\r\n        current_ratings >= 5 ~ \"Mittel\",\r\n        TRUE ~ \"Verbesserungswürdig\"\r\n      )\r\n    ) %>%\r\n      arrange(desc(Bewertung))\r\n  }, align = \"lcl\")\r\n  \r\n  # Download handler for results\r\n  output$download_results <- downloadHandler(\r\n    filename = function() {\r\n      paste(\"Lebensrad-Ergebnisse-\", format(Sys.Date(), \"%Y-%m-%d\"), \".csv\", sep = \"\")\r\n    },\r\n    content = function(file) {\r\n      current_ratings <- ratings()\r\n      results_df <- data.frame(\r\n        Lebensbereich = names(life_areas),\r\n        Bewertung = current_ratings,\r\n        Status = case_when(\r\n          current_ratings >= 8 ~ \"Stark\",\r\n          current_ratings >= 5 ~ \"Mittel\",\r\n          TRUE ~ \"Verbesserungswürdig\"\r\n        )\r\n      )\r\n      write.csv(results_df, file, row.names = FALSE)\r\n    }\r\n  )\r\n}\r\n\r\nshinyApp(ui = ui, server = server)\r\n","type":"text"},{"name":"pensionato_lebensrad.Rproj","content":"Version: 1.0\r\nProjectId: 6cdd8beb-d759-4daa-a60b-699ffc451b9c\r\n\r\nRestoreWorkspace: Default\r\nSaveWorkspace: Default\r\nAlwaysSaveHistory: Default\r\n\r\nEnableCodeIndexing: Yes\r\nUseSpacesForTab: Yes\r\nNumSpacesForTab: 2\r\nEncoding: UTF-8\r\n\r\nRnwWeave: Sweave\r\nLaTeX: pdfLaTeX\r\n","type":"text"}]
